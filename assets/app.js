angular.module("appLearn",["ngRoute"]),angular.module("appLearn").controller("ApplicationController",["$scope","$location","UserSvc",function(e,t,o){e.$on("login",function(t,o){e.currentUser=o}),e.logout=function(){o.logOut(),delete e.currentUser,t.path("/")}}]),angular.module("appLearn").controller("EditarMissatgeController",["$scope","$location","MissatgesService",function(e,t,o){e.missatgeBody=o.missatgeToEdit.body,e.editarMissatge=function(){e.missatgeBody&&o.put({_id:o.missatgeToEdit._id,body:e.missatgeBody}).success(function(){o.missatgeToEdit.body=e.missatgeBody,e.missatgeBody=null,t.path("/")})}}]),angular.module("appLearn").controller("LoginController",["$scope","$location","UserSvc",function(e,t,o){e.$watchGroup(["username","password"],function(t,o){t!=o&&(e.error=null)}),e.login=function(r,s){r&&s?(console.log(o),o.login(r,s,function(t,o){401==o&&(e.error=t.missatge)}).success(function(){o.getUser().then(function(o){e.$emit("login",o.data),t.path("/")})})):e.error="Has d'emplenar tots els camps"}}]),angular.module("appLearn").controller("MissatgesController",["$scope","$location","MissatgesService",function(e,t,o){o.fetch().success(function(t){e.missatges=t}),e.esborrarMissatge=function(t){o["delete"](t._id).success(function(){var o=e.missatges.indexOf(t);e.missatges.splice(o,1)})},e.editarMissatge=function(e){o.edit(e),t.path("/editarmissatge")}}]),angular.module("appLearn").service("MissatgesService",["$http",function(e){this.fetch=function(){return e.get("/api/missatges")},this.create=function(t){return e.post("/api/missatges",t)},this["delete"]=function(t){return console.log(t),e["delete"]("/api/missatges/"+t)},this.edit=function(e){this.missatgeToEdit=e},this.put=function(t){return e.put("/api/missatges",t)}}]),angular.module("appLearn").controller("NouMissatgeController",["$scope","$location","MissatgesService",function(e,t,o){e.afegirMissatge=function(){console.log(e.missatgeBody),e.missatgeBody&&o.create({body:e.missatgeBody}).success(function(){t.path("/")})}}]),angular.module("appLearn").controller("RegistreController",["$scope","$location","UserSvc",function(e,t,o){e.registre=function(r,s,n){e.$watchGroup(["username","password","password2"],function(t,o){t!=o&&(e.error=null)}),s&&n&&r?s===n?o.registre(r,s).success(function(){t.path("/login")}).error(function(t,o){409==o&&(e.error=t.missatge)}):e.error="Les contrasenyes no s√≥n iguals":e.error="Has d'emplenar tots els camps"}}]),angular.module("appLearn").config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{controller:"MissatgesController",templateUrl:"missatges.html",autoritzat:!1}).when("/noumissatge",{controller:"NouMissatgeController",templateUrl:"nouMissatge.html",autoritzat:!0}).when("/editarmissatge",{controller:"EditarMissatgeController",templateUrl:"editarMissatge.html",autoritzat:!0}).when("/registre",{controller:"RegisterController",templateUrl:"register.html",autoritzat:!1}).when("/login",{controller:"LoginController",templateUrl:"login.html",autoritzat:!1}).when("/registre",{controller:"RegistreController",templateUrl:"registre.html",autoritzat:!1}).otherwise({redirectTo:"/"}),t.html5Mode({enabled:!0,requireBase:!1})}]).run(["$rootScope","UserSvc",function(e,t){e.$on("$routeChangeStart",function(e,o){o&&!t.auth&o.autoritzat&&e.preventDefault()})}]),angular.module("appLearn").service("UserSvc",["$http",function(e){var t=this;t.auth=!1,t.getUser=function(){return e.get("/api/users")},t.login=function(o,r,s){return e.post("/api/sessions",{username:o,password:r}).success(function(o){t.token=o,e.defaults.headers.common["x-auth"]=o,o&&(t.auth=!0)}).error(function(e,t){s(e,t)})},t.registre=function(t,o){return e.post("/api/users",{username:t,password:o})},t.logOut=function(){t.auth=!1,e.defaults.headers.common["x-auth"]=""}}]);
//# sourceMappingURL=data:application/json;base64,