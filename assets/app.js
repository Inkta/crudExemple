angular.module("appLearn",["ngRoute"]),angular.module("appLearn").controller("ApplicationController",["$scope","$location","UserSvc",function(t,e,o){t.$on("login",function(e,o){t.currentUser=o}),t.logout=function(){o.logOut(),delete t.currentUser,e.path("/")}}]),angular.module("appLearn").controller("EditarMissatgeController",["$scope","$location","MissatgesService",function(t,e,o){t.missatgeBody=o.missatgeToEdit.body,t.editarMissatge=function(){t.missatgeBody&&o.put({_id:o.missatgeToEdit._id,body:t.missatgeBody}).success(function(){o.missatgeToEdit.body=t.missatgeBody,t.missatgeBody=null,e.path("/")})}}]),angular.module("appLearn").controller("LoginController",["$scope","$location","UserSvc",function(t,e,o){t.login=function(n,a){o.login(n,a).then(function(o){t.$emit("login",o.data),o.data&&e.path("/")})}}]),angular.module("appLearn").controller("MissatgesController",["$scope","$location","MissatgesService",function(t,e,o){o.fetch().success(function(e){t.missatges=e}).error(function(t){console.log(t)}),t.esborrarMissatge=function(t){o["delete"](t._id).success(function(){e.path("/")})},t.editarMissatge=function(t){console.log(t),o.edit(t),e.path("/editarmissatge")}}]),angular.module("appLearn").service("MissatgesService",["$http",function(t){this.fetch=function(){return t.get("/api/missatges")},this.create=function(e){return t.post("/api/missatges",e)},this["delete"]=function(e){return console.log(e),t["delete"]("/api/missatges/"+e)},this.edit=function(t){this.missatgeToEdit=t},this.put=function(e){return t.put("/api/missatges",e)}}]),angular.module("appLearn").controller("NouMissatgeController",["$scope","$location","MissatgesService",function(t,e,o){t.afegirMissatge=function(){console.log(t.missatgeBody),t.missatgeBody&&o.create({body:t.missatgeBody}).success(function(){e.path("/")})}}]),angular.module("appLearn").controller("RegistreController",["$scope","$location","UserSvc",function(t,e,o){t.registre=function(n,a){o.login(n,a).then(function(o){t.$emit("login",o.data),o.data&&e.path("/")})}}]),angular.module("appLearn").config(["$routeProvider",function(t){t.when("/",{controller:"MissatgesController",templateUrl:"missatges.html",autoritzat:!1}).when("/noumissatge",{controller:"NouMissatgeController",templateUrl:"nouMissatge.html",autoritzat:!0}).when("/editarmissatge",{controller:"EditarMissatgeController",templateUrl:"editarMissatge.html",autoritzat:!0}).when("/registre",{controller:"RegisterController",templateUrl:"register.html",autoritzat:!1}).when("/login",{controller:"LoginController",templateUrl:"login.html",autoritzat:!1}).when("/registre",{controller:"RegistreController",templateUrl:"registre.html",autoritzat:!1})}]).run(["$rootScope","UserSvc",function(t,e){t.$on("$routeChangeStart",function(t,o){o&&!e.auth&o.autoritzat&&t.preventDefault()})}]),angular.module("appLearn").service("UserSvc",["$http",function(t){var e=this;e.auth=!1,e.getUser=function(){return t.get("/api/users")},e.login=function(o,n){return t.post("/api/sessions",{username:o,password:n}).then(function(o){return e.token=o.data,t.defaults.headers.common["x-auth"]=o.data,o.data&&(e.auth=!0),e.getUser()})},e.registre=function(o,n){return t.post("/api/users",{username:o,password:n}).then(function(o){return e.token=o.data,t.defaults.headers.common["x-auth"]=o.data,o.data&&(e.auth=!0),e.getUser()})},e.logOut=function(){e.auth=!1,t.defaults.headers.common["x-auth"]=""}}]);
//# sourceMappingURL=data:application/json;base64,